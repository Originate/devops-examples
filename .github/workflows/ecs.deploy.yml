name: ECS Example - Deploy
on:
  workflow_run:
    workflows:
      - ECS Example - Test
    branches:
      - main
    types:
      - completed
  push:
    tags:
      - ecs-deployments/*/*

jobs:
  plan-global:
    name: Generate plan for global Terraform changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      needs_apply: ${{ steps.terraform-plan.outputs.needs_apply }}
      plan_filename: ${{ steps.terraform-plan.outputs.plan_filename }}
    if: ${{ github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2

      - name: AWS configure
        uses: Originate/github-actions/aws-configure@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          aws_profile: ecsstack

      - name: Terraform init
        uses: Originate/github-actions/terraform-init@v1
        with:
          working_directory: examples/ecs/terraform/global

      - name: Terraform plan
        id: terraform-plan
        uses: Originate/github-actions/terraform-plan@v1
        with:
          working_directory: examples/ecs/terraform/global

      - name: Upload Terraform plan file
        if: ${{ steps.terraform-plan.outputs.needs_apply }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.terraform-plan.outputs.plan_filename }}
          path: ${{ steps.terraform-plan.outputs.plan_filepath }}

  apply-global:
    name: Apply global Terraform changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: plan-global
    environment:
      name: ecs-global
    if: ${{ needs.plan-global.outputs.needs_apply }}
    steps:
      - uses: actions/checkout@v2

      - name: Download Terraform plan file
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.plan-global.outputs.plan_filename }}
          path: ${{ runner.temp }}

      - name: AWS configure
        uses: Originate/github-actions/aws-configure@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          aws_profile: ecsstack

      - name: Terraform init
        uses: Originate/github-actions/terraform-init@v1
        with:
          working_directory: examples/ecs/terraform/global

      - name: Terraform apply
        uses: Originate/github-actions/terraform-apply@v1
        with:
          working_directory: examples/ecs/terraform/global
          plan_filepath: ${{ runner.temp }}/${{ needs.plan-global.outputs.plan_filename }}

  plan-environment:
    name: Generate plan for environment Terraform changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: apply-global
    outputs:
      needs_apply: ${{ steps.terraform-plan.outputs.needs_apply }}
      plan_filename: ${{ steps.terraform-plan.outputs.plan_filename }}
      terraform_workspace: ${{ steps.terraform-init.outputs.terraform_workspace }}
    if: ${{ !failure() && !cancelled() }}
    steps:
      - uses: actions/checkout@v2

      - name: AWS configure
        uses: Originate/github-actions/aws-configure@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          aws_profile: ecsstack

      - name: Terraform init
        id: terraform-init
        uses: Originate/github-actions/terraform-init@v1
        with:
          working_directory: examples/ecs/terraform/environment

      - name: Terraform plan
        id: terraform-plan
        uses: Originate/github-actions/terraform-plan@v1
        with:
          working_directory: examples/ecs/terraform/environment
          terraform_args: -var-file='../config/${{ steps.terraform-init.outputs.terraform_workspace }}.override.tfvars' -var 'universal_override_docker_tag=${{ github.sha }}'

      - name: Upload Terraform plan file
        if: ${{ steps.terraform-plan.outputs.needs_apply }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.terraform-plan.outputs.plan_filename }}
          path: ${{ steps.terraform-plan.outputs.plan_filepath }}

  apply-environment:
    name: Apply environment Terraform changes
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: plan-environment
    environment:
      name: ecs-${{ needs.plan-environment.outputs.terraform_workspace }}
    if: ${{ !failure() && !cancelled() && needs.plan-environment.outputs.needs_apply }}
    steps:
      - uses: actions/checkout@v2

      - name: Download Terraform plan file
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.plan-environment.outputs.plan_filename }}
          path: ${{ runner.temp }}

      - name: AWS configure
        uses: Originate/github-actions/aws-configure@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          aws_profile: ecsstack

      - name: Terraform init
        uses: Originate/github-actions/terraform-init@v1
        with:
          working_directory: examples/ecs/terraform/environment

      - name: Terraform apply
        uses: Originate/github-actions/terraform-apply@v1
        with:
          working_directory: examples/ecs/terraform/environment
          plan_filepath: ${{ runner.temp }}/${{ needs.plan-environment.outputs.plan_filename }}
